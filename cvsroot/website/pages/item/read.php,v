head	1.10;
access;
symbols;
locks; strict;
comment	@# @;


1.10
date	2005.02.07.18.49.28;	author at;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.27.21.40.29;	author at;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.23.13.50.34;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.23.12.56.02;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.06.14.02.33;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.06.02.20.01;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.05.02.27.10;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.24.17.39.46;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.20.20.38.40;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.19.02.48.34;	author at;	state Exp;
branches;
next	;


desc
@@


1.10
log
@friendlyurls
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: read.php,v 1.9 2004/10/27 21:40:29 at Exp $
 */

# Create templates
$template = file_get_contents("templates/item/read.php");

# Add all the features to the template
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/item/select-features.sql");
$cmd->addParameter("item", $cfg['object']);
$result =& $cmd->executeReader();
while ($row =& $result->fetchRow()) {
    $template = Template::block($template, "ATTR", array(
        "C_NAME" => $row['c_name'],
        "C_VALUE" => ($row['c_value'] ? $row['c_value'] : "")));
}

# Get the next and last items in the list
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/item/next-by-type.sql");
$cmd->addParameter("type", $object->getType());
$cmd->addParameter("item", $cfg['object']);
$next = $cmd->executeScalar();
if ($next) {
    $template = Template::unhide($template, "NEXT");
    $template = Template::replace($template,
        array ("NEXT_ID" => $next));
}
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/item/last-by-type.sql");
$cmd->addParameter("type", $object->getType());
$cmd->addParameter("item", $cfg['object']);
$last = $cmd->executeScalar();
if ($last) {
    $template = Template::unhide($template, "LAST");
    $template = Template::replace($template,
        array ("LAST_ID" => $last));
}

# Auto-link to items when they are in the format "item XYZ"
$replacement = "<a href=\"members/item/read/\\1\">\\0</a>";
$template = preg_replace("/item (\d+)/", $replacement, $template);

# Add information about the type and condition and status
$type =& new item_type();
$type->select($object->getType());
$template = Template::replace($template, array(
    "TYPE_TITLE" => $type->getTitle()));
$cond =& new condition();
$cond->select($object->getCondition());
$cfg['status_title'] = array_flip($cfg['status_id']);
$template = Template::replace($template, array(
    "CONDITION_TITLE" => $cond->getTitle(),
    "STATUS_TITLE" => $cfg['status_title'][$object->getStatus()]));

$res['content'] = $object->insertIntoTemplate($template);
$res['title'] = "Item: " . $object->getUID();

?>
@


1.9
log
@shrink-wrapped the actions form
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.8 2004/10/23 13:50:34 at Exp $
d60 1
a60 3
$replacement = "<a href=\"members.php?page=item"
    . "&action={$cfg['action_id']['read']}"
    . "&object=\\1\">\\0</a>";
@


1.8
log
@attribute -> feature
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.7 2004/10/23 12:56:02 at Exp $
a75 6

# Create a list of allowed actions for the object
foreach ($object->getAllowedActions() as $key => $action) {
    $template = Template::block($template, "ACTIONS",
        array_change_key_case($action, 1));
}
@


1.7
log
@edit_attributes -> edit_features, change class names to match table names
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.6 2004/10/06 14:02:33 at Exp $
d26 1
a26 1
# Add all the attributes to the template
d28 1
a28 1
$cmd->loadQuery("sql/queries/item/select-attributes.sql");
@


1.6
log
@display status
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.5 2004/10/06 02:20:01 at Exp $
d66 1
a66 1
$type =& new ItemType();
d70 1
a70 1
$cond =& new Condition();
@


1.5
log
@auto-link to other items
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.4 2004/10/05 02:27:10 at Exp $
d65 1
a65 1
# Add information about the type and condition
d72 1
d74 2
a75 1
    "CONDITION_TITLE" => $cond->getTitle()));
@


1.4
log
@add next/last/back-to-list links
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.3 2004/09/24 17:39:46 at Exp $
d27 4
a30 4
$comm =& $obj['conn']->createCommand();
$comm->loadQuery("sql/queries/item/select-attributes.sql");
$comm->addParameter("item", $cfg['object']);
$result =& $comm->executeReader();
d38 5
a42 5
$comm =& $obj['conn']->createCommand();
$comm->loadQuery("sql/queries/item/next-by-type.sql");
$comm->addParameter("type", $object->getType());
$comm->addParameter("item", $cfg['object']);
$next = $comm->executeScalar();
d48 5
a52 5
$comm =& $obj['conn']->createCommand();
$comm->loadQuery("sql/queries/item/last-by-type.sql");
$comm->addParameter("type", $object->getType());
$comm->addParameter("item", $cfg['object']);
$last = $comm->executeScalar();
d58 6
@


1.3
log
@rebuild item system, making most things 'features' of items; no hardcoded title and description
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.2 2004/09/20 20:38:40 at Exp $
d35 22
@


1.2
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.1 2004/09/19 02:48:34 at Exp $
d54 1
a54 1
$res['title'] = "Item: " . $object->getTitle() . " " . $object->getUID();
@


1.1
log
@init
@
text
@d20 1
a20 1
 * $Id: read.php,v 1.3 2004/09/08 22:45:37 at Exp $
d32 1
a32 1
    $template = Template::replaceWithinBlock($template, "ATTR", array(
d40 1
a40 1
$template = Template::replaceValues($template, array(
d44 1
a44 1
$template = Template::replaceValues($template, array(
d49 1
a49 1
    $template = Template::replaceWithinBlock($template, "ACTIONS",
@

