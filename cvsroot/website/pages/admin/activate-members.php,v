head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	2004.12.04.21.51.48;	author at;	state Exp;
branches;
next	1.10;

1.10
date	2004.11.01.19.06.58;	author at;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.23.12.47.18;	author at;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.06.14.15.36;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.04.18.13.06;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.20.20.38.39;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.18.16.50.25;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.09.22.59.21;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.02.17.52.34;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.01.20.04.58;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.01.19.56.12;	author at;	state Exp;
branches;
next	;


desc
@@


1.11
log
@create transactions; move some of the expense/expense_report functionality into transactions
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: activate-members.php,v 1.10 2004/11/01 19:06:58 at Exp $
 */

include_once("membership.php");
include_once("membership_type.php");
include_once("Email.php");
require_once("transaction.php");

# Check that the user has correct permissions
if (!$obj['user']->isInGroup('root') && !$obj['user']->isInGroup('treasurer')) {
    # The user is not allowed to access this page.
    include_once("pages/common/not-permitted.php");
    return false;
}

$wrapper = file_get_contents("templates/admin/activate-members.php");

# Get a list of memberships that are a) not flexible b) inactive c) the
# membership type hasn't expired already (so activating the membership would do
# some good).

$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/membership/select-for-activation.sql");
$result =& $cmd->executeReader();

if (isset($_POST['submitted']) && isset($_POST['membership'])) {

    # Get the correct category for the transactions
    $cmd =& $obj['conn']->createCommand();
    $cmd->setCommandText("select c_uid from [_]expense_category "
        . "where c_title = 'Membership Dues'");
    $cat = $cmd->executeScalar();

    $aggregate = array(); // Array of results we'll print out later
    while ($row = $result->fetchRow()) {
        # Check that the current row got submitted with the form
        if (in_array($row['membership_uid'], $_POST['membership'])) {
            # Create the objects we need
            $membership =& new membership();
            $membership->select($row['membership_uid']);
            $member =& new member();
            $member->select($row['c_uid']);
            $membership->setStatus($cfg['status_id']['active']);
            $membership->setAmountPaid($membership->getTotalCost());
            $membership->update();

            # Add a note to the member to say who activated the membership
            $member->addNote("$cfg[user] activated membership "
                .  $membership->getUID());

            $msg =& new Email();
            $msgBody = file_get_contents("templates/emails/activation-notice.txt");
            $msgBody = Template::replace($msgBody, array(
                "CLUB_NAME" => $cfg['club_name'],
                "TITLE" => $row['c_title'],
                "C_FULL_NAME" => $member->getFullName(),
                "BASEURL" => $cfg['site_url'] . $cfg['base_url'])
                + $membership->getVarArray());
            $msg->setBody($msgBody);
            $msg->addTo($member->getEmail());
            $msg->setFrom($cfg['club_admin_email_name']);
            $msg->addHeader("Return-Path", $cfg['club_admin_email']);
            $msg->loadFooter("templates/emails/footer.txt");
            $msg->setSubject("Welcome to $cfg[club_name]!");
            $msg->send();

            # Record this transaction
            $tran =& new transaction();
            $tran->setAmount(floatval($membership->getAmountPaid()));
            $tran->setCategory($cat);
            $tran->setDescription($member->getFullName()
                . "'s dues for membership " . $membership->getUID());
            $tran->setFrom($row['c_uid']);
            $tran->setTo($cfg['root_uid']);
            $tran->insert();

            # Record the results
            if (!isset($aggregate[$row['c_type']])) {
                $aggregate[$row['c_type']] = 1;
            }
            else {
                $aggregate[$row['c_type']] += 1;
            }
        }
    }
    if (count($aggregate)) {
        $wrapper = Template::unhide($wrapper, "SUCCESS");
        foreach ($aggregate as $type => $num) {
            $mt =& new membership_type();
            $mt->select($type);
            $wrapper = Template::block($wrapper, "RESULTS", array(
                "MEMBERSHIP_TITLE" => $mt->getTitle(),
                "NUM" => $num));
        }
    }
}
else {
    # No post data; display the list.
    $wrapper = Template::unhide($wrapper, "SOME");
    while ($row = $result->fetchRow()) {
        $wrapper = Template::block($wrapper, "ROW",
            array_change_key_case($row, 1)
            + array("UNDERAGE" => ($row['c_underage'] 
                ? " class='underage'" 
                : "")));
    }
}

$res['title'] = "Activate Memberships";
$res['content'] = $wrapper;

?>
@


1.10
log
@don't subscribe people to the main mailing list.  Add an expense report showing monies received
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.9 2004/10/23 12:47:18 at Exp $
d26 1
a26 2
require_once("expense_report.php");
require_once("expense.php");
d46 2
a47 2
    # Create a new 'expense report' and add an 'expense' (really a receipt)
    # to record this transaction
a51 4
    $rept =& new expense_report();
    $rept->setMember($cfg['user']);
    $rept->setStatus($cfg['status_id']['paid']);
    $rept->insert();
d86 5
a90 7
            $rcpt =& new expense();
            $rcpt->setReport($rept->getUID());
            $rcpt->setAmount(-1 * floatval($membership->getAmountPaid()));
            $rcpt->setCategory($cat);
            $rcpt->setAdventure("");
            $rcpt->setMerchant("");
            $rcpt->setDescription($member->getFullName()
d92 3
a94 2
            $rcpt->setExpenseDate(date("Y-m-d"));
            $rcpt->insert();
@


1.9
log
@change class names to match table names
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.8 2004/10/06 14:15:36 at Exp $
d25 3
a27 1
include_once("email_list.php");
d47 11
a57 2
    $list =& new email_list();
    $list->select($cfg['main_email_list']);
d91 10
a100 2
            # Subscribe the member to the email list
            $list->subscribe($member);
a120 2
    # Process the subscription requests
    $list->processRequests();
@


1.8
log
@cmd -> comm
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.7 2004/10/04 18:13:06 at Exp $
d23 3
a25 3
include_once("Membership.php");
include_once("MembershipType.php");
include_once("EmailList.php");
d45 1
a45 1
    $list =& new EmailList();
d52 1
a52 1
            $membership =& new Membership();
d54 1
a54 1
            $member =& new Member();
d95 1
a95 1
            $mt =& new MembershipType();
@


1.7
log
@stop using the owner- address of the officers list as the club admin email, and stop BCCing messages all over the place
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.6 2004/09/20 20:38:39 at Exp $
d40 3
a42 3
$comm =& $obj['conn']->createCommand();
$comm->loadQuery("sql/queries/membership/select-for-activation.sql");
$result =& $comm->executeReader();
@


1.6
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.5 2004/09/18 16:50:25 at Exp $
a75 1
            $msg->addBCC($cfg['club_admin_email']);
@


1.5
log
@added a report to show what was activated
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.4 2004/09/09 22:59:21 at Exp $
d66 1
a66 1
            $msgBody = Template::replaceValues($msgBody, array(
d94 1
a94 1
        $wrapper = Template::unhideBlock($wrapper, "SUCCESS");
d98 1
a98 1
            $wrapper = Template::replaceWithinBlock($wrapper, "RESULTS", array(
d108 1
a108 1
    $wrapper = Template::unhideBlock($wrapper, "SOME");
d110 1
a110 1
        $wrapper = Template::replaceWithinBlock($wrapper, "ROW",
@


1.4
log
@subscriptions can now be batched and done all at once
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.3 2004/09/02 17:52:34 at Exp $
d24 1
d47 1
d83 8
d92 2
d95 7
@


1.3
log
@add a note when activating a member
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.2 2004/09/01 20:04:58 at Exp $
d44 2
a79 2
            $list =& new EmailList();
            $list->select($cfg['main_email_list']);
d84 2
@


1.2
log
@removed an echo statement
@
text
@d20 1
a20 1
 * $Id: activate-members.php,v 1.1 2004/09/01 19:56:12 at Exp $
d55 4
@


1.1
log
@init
@
text
@d20 1
a20 1
 * $Id: auto-renew-members.php,v 1.3 2004/08/25 11:43:32 at Exp $
a76 1
            echo "subscribed";
@

