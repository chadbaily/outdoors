head	1.5;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2004.10.23.12.47.07;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.20.20.38.39;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.25.11.43.32;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.20.14.21.23;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.5
log
@fix to work; get tables from [_]table instead of 'show tables
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: delete-object.php,v 1.4 2004/09/20 20:38:39 at Exp $
 *
 * This page deletes objects from the database.  It expects parameters in arrays
 * of the form [_]table_name[].  It will delete every c_uid from [_]table_name.
 * There is no confirmation or anything, it just does it.
 */

# Check permissions.  Only members of the "root" groups are allowed to access
# this page.

if (!$obj['user']->isRootUser()) {
    # The user is not allowed to access this page.
    include_once("pages/common/not-permitted.php");
    return false;
}

$wrapper = file_get_contents("templates/admin/delete-object-wrapper.php");
$contents = "";

# Query the database for a list of all tables that we can delete things from
$tables = array();
$result =& $obj['conn']->query("select * from [_]table");
while ($row =& $result->fetchRow(DB_FETCHMODE_ORDERED)) {
    $tables[$row[0]] = $row[0];
}

# Get the POST parameters to delete and delete them from the corresponding
# tables.
foreach ($_POST as $key => $array) {
    # Get a comma-separated list of the rows to delete
    $values = implode(",", $_POST[$key]);
    # Make sure the table exists and the values are only integers
    if (isset($tables[$key]) && preg_match("/^[\d,]+$/", $values)) {
        $obj['conn']->query("delete from $key where c_uid in ($values)"); 
        $contents .= "<p>Deleted the following rows from <tt>$key</tt>:"
            . "</p><blockquote>$values</blockquote>";
    }
}

$res['content'] = Template::replace($wrapper, array("DELETED" => $contents));
$res['title'] = "Delete Objects";

?>
@


1.4
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: delete-object.php,v 1.3 2004/08/25 11:43:32 at Exp $
d41 1
a41 1
$result =& $obj['conn']->query("show tables like 't\_%'");
d49 7
a55 10
    if (preg_match("/^t_[a-z_]+$/", $key)) {
        # Get a comma-separated list of the rows to delete
        $values = implode(",", $_POST[$key]);
        # Make sure the table exists and the values are only integers
        if (isset($tables[$key]) && preg_match("/^[\d,]+$/", $values)) {
            $obj['conn']->query("delete from $key where c_uid in ($values)"); 
            $contents .= "<p>Deleted the following rows from <tt>$key</tt>:"
                . "</p><blockquote>$values</blockquote>";
        }

@


1.3
log
@removed more references to security controller
@
text
@d20 1
a20 1
 * $Id: delete-object.php,v 1.2 2004/07/20 14:21:23 at Exp $
d62 1
a62 1
$res['content'] = Template::replaceValues($wrapper, array("DELETED" => $contents));
@


1.2
log
@put table name prefixes into code
@
text
@d20 1
a20 1
 * $Id: delete-object.php,v 1.1.1.1 2004/05/30 03:10:35 at Exp $
d32 2
a33 1
    $obj['security']->notAllowedOnPage($obj['user']);
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: delete-object.php,v 1.4 2004/05/30 01:42:06 baron Exp $
d23 1
a23 1
 * of the form t_table_name[].  It will delete every c_uid from t_table_name.
@


1.1.1.1
log
@init
@
text
@@
