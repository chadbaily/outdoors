head	1.11;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2005.02.08.12.33.19;	author at;	state Exp;
branches;
next	1.10;

1.10
date	2005.02.07.18.49.27;	author at;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.28.16.04.38;	author at;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.23.12.49.28;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.07.17.41.47;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.20.20.38.39;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.20.20.07.04;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.22.45.37;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.12.16.43.11;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.26.02.12.31;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.11
log
@fix redirect
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: create.php,v 1.10 2005/02/07 18:49:27 at Exp $
 */

include_once("location.php");
include_once("adventure_activity.php");

# Create the form and the template
$formTemplate = file_get_contents("forms/adventure/create.xml");
$template = file_get_contents("templates/adventure/create.php");

# Ensure that the user's contact info isn't private 
if ($obj['user']->getFlag("private")) {
    $template = Template::unhide($template, "ERROR");
    $res['content'] = $template;
}
else {

    $template = Template::unhide($template, "INSTRUCTIONS");

    # Get a list of all locations in the DB.
    $cmd =& $obj['conn']->createCommand();
    $cmd->loadQuery("sql/queries/generic-select.sql");
    $cmd->addParameter("table", "[_]location");
    $cmd->addParameter("orderby", "c_title");
    $result =& $cmd->executeReader();

    # Add the locations to the drop-down menus.
    while ($row =& $result->fetchRow()) {
        $formTemplate = Template::block(
            $formTemplate, array("DEPART","DEST"), 
            array_change_key_case($row, 1));
    }

    # Get a list of all activities in the DB.
    $cmd =& $obj['conn']->createCommand();
    $cmd->loadQuery("sql/queries/generic-select.sql");
    $cmd->addParameter("table", "[_]activity");
    $cmd->addParameter("orderby", "c_title");
    $result =& $cmd->executeReader();

    # Add the activities in $cols columns to the page
    $cols = 3;
    $rowTemplate = Template::extract($formTemplate, "ACTIVITY_ROW");
    for ($i = 0; $i < $result->numRows();) {
        $thisRow = $rowTemplate;
        for ($j = 0; $j < $cols && $row =& $result->fetchRow(); ++$j, ++$i) {
            $thisRow = Template::block($thisRow, "ACTIVITY",
                array_change_key_case($row, 1)
                + array("WIDTH" => (int) (100 / $cols)));
        }
        $formTemplate = Template::replace($formTemplate,
            array("ACTIVITY_ROW" => $thisRow), true);
    }

    # Turn the form template into a form and XML-parse it
    # (Don't finalize it before replacing common variables)
    $formTemplate = preg_replace("/\{ACTION_([^}]+)\}/e",
        "\$cfg['action_id'][ strtolower('\\1') ]", $formTemplate);
    $form =& new XMLForm(Template::finalize($formTemplate), true);
    $form->snatch();
    $form->validate();

    if ($form->isValid()) {
        # Make sure the adventure's signup deadline is in the future (the form
        # validation has already made sure that signup <= start < end)
        if (date("Y-m-d H:i:s") >= $form->getValue("signup")) {
            $template = Template::unhide($template, "FUTURE");
            $res['content'] = Template::replace($template, array(
                "FORM" => $form->toString()));
        }
        else {
            # Save the adventure in the database
            $object =& new adventure();
            $object->setFee($form->getValue("fee"));
            $object->setTitle($form->getValue("title"));
            $object->setDescription($form->getValue("description"));
            $object->setMaxAttendees($form->getValue("attendees"));
            $object->setDestination($form->getValue("destination"));
            $object->setDeparture($form->getValue("departure"));
            $object->setStartDate($form->getValue("start"));
            $object->setEndDate($form->getValue("end"));
            $object->setSignupDate($form->getValue("signup"));
            $object->setStatus($cfg['status_id']['inactive']);
            $object->insert();

            # Create and save adventure-activity associations
            foreach ($form->getValue("activity") as $uid => $selected) {
                if ($selected) {
                    $advAct =& new adventure_activity();
                    $advAct->setAdventure($object->getUID());
                    $advAct->setActivity($uid);
                    $advAct->insert();
                }
            }
            
            # Display instructions & links for the next step.
            redirect("$cfg[base_url]/members/adventure/edit_questions/$object->c_uid");
        }
    }
    else {
        $res['content'] = Template::replace($template, array(
           "FORM" => $form->toString()));
    }
}

$res['title'] = "Create Adventure";

?>
@


1.10
log
@friendlyurls
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.9 2004/12/28 16:04:38 at Exp $
d116 1
a116 1
            redirect("members/adventure/edit_questions/$object->c_uid");
@


1.9
log
@clarify logic, remove undefined variable
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.8 2004/10/23 12:49:28 at Exp $
d116 1
a116 2
            redirect("members.php?page=adventure&action="
                .  "{$cfg['action_id']['edit_questions']}&object=$object->c_uid");
@


1.8
log
@change class names to match table names
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.7 2004/10/07 17:41:47 at Exp $
d87 2
a88 1
            $error = true;
d90 1
a90 2

        if (!$error) {
a117 4
        }
        else {
            $res['content'] = Template::replace($template, array(
                "FORM" => $form->toString()));
@


1.7
log
@get rid of utility/Utility.php
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.6 2004/09/20 20:38:39 at Exp $
d23 2
a24 2
include_once("Location.php");
include_once("AdventureActivity.php");
d92 1
a92 1
            $object =& new Adventure();
d108 1
a108 1
                    $advAct =& new AdventureActivity();
@


1.6
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.5 2004/09/20 20:07:04 at Exp $
d116 1
a116 1
            Utility::redirect("members.php?page=adventure&action="
@


1.5
log
@migrate away from DateTime
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.4 2004/09/08 22:45:37 at Exp $
d32 1
a32 1
    $template = Template::unhideBlock($template, "ERROR");
d37 1
a37 1
    $template = Template::unhideBlock($template, "INSTRUCTIONS");
d48 1
a48 1
        $formTemplate = Template::replaceWithinBlock(
d66 1
a66 1
            $thisRow = Template::replaceWithinBlock($thisRow, "ACTIVITY",
d70 1
a70 1
        $formTemplate = Template::replaceValues($formTemplate,
d86 1
a86 1
            $template = Template::unhideBlock($template, "FUTURE");
d120 1
a120 1
            $res['content'] = Template::replaceValues($template, array(
d125 1
a125 1
        $res['content'] = Template::replaceValues($template, array(
@


1.4
log
@new navbar and tabbed-box scheme; coalesced templates
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.3 2004/08/12 16:43:11 at Exp $
d85 1
a85 2
        $now =& new DateTime();
        if ($now->compareTo(new DateTime($form->getValue("signup"))) >= 0) {
d99 3
a101 3
            $object->setStartDate(new DateTime($form->getValue("start")));
            $object->setEndDate(new DateTime($form->getValue("end")));
            $object->setSignupDate(new DateTime($form->getValue("signup")));
@


1.3
log
@added a page that shows inactive adventures, and made the default status to 'inactive' when creating an adventure
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.2 2004/07/26 02:12:31 at Exp $
d28 1
a28 1
$wrapper = file_get_contents("templates/adventure/create.php");
d32 2
a33 2
    $wrapper = Template::unhideBlock($wrapper, "ERROR");
    $res['content'] = $wrapper;
d37 1
a37 1
    $wrapper = Template::unhideBlock($wrapper, "INSTRUCTIONS");
d87 1
a87 1
            $wrapper = Template::unhideBlock($wrapper, "FUTURE");
d121 1
a121 1
            $res['content'] = Template::replaceValues($wrapper, array(
d126 1
a126 1
        $res['content'] = Template::replaceValues($wrapper, array(
@


1.2
log
@added table-name prefixing
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.1.1.1 2004/05/30 03:10:35 at Exp $
d103 1
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.8 2004/05/30 01:42:07 baron Exp $
d42 1
a42 1
    $cmd->addParameter("table", "t_location");
d56 1
a56 1
    $cmd->addParameter("table", "t_activity");
@


1.1.1.1
log
@init
@
text
@@
