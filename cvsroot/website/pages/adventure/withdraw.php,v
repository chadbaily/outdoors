head	1.8;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2005.01.31.00.35.49;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.23.12.51.27;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.07.17.41.47;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.20.20.38.39;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.20.20.07.04;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.18.02.40.22;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.08.22.45.37;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.8
log
@don't really delete the attendee
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: withdraw.php,v 1.7 2004/10/23 12:51:27 at Exp $
 */

$template = file_get_contents("templates/adventure/withdraw.php");
$template = $object->insertIntoTemplate($template);

$leader =& new member();
$leader->select($object->getOwner());

$error = false;

# Ensure that the user is not the adventure's leader
if ($leader->equals($obj['user'])) {
    $template = Template::unhide($template, "LEADER");
    $error = true;
}

# Ensure that the adventure's signup/withdraw date is in the future
if (date("Y-m-d H:i:s") >= $object->getSignupDate()) {
    $template = Template::unhide($template, "DEADLINE");
    $error = true;
}

# Ensure that the member is attending this adventure
if (!JoinAdventureManager::checkIfMemberIsAttending($object, $obj['user'])) {
    $template = Template::unhide($template, "ALREADY");
    $error = true;
}

if (getval('continue') && !$error) {
    $attendee = JoinAdventureManager::getAttendee($obj['user'], $object);

    # Before removing someone from the waitlist, delete the attendee so there's
    # room on the adventure for the waitlisted person in case the adventure is
    # full.
    $attendee->delete(FALSE, TRUE);
    if ($attendee->getStatus() == $cfg['status_id']['default']) {
        JoinAdventureManager::removeFirstWaitlistedMember($object);
    }

    # Send a confirmation email
    JoinAdventureManager::sendWithdrawalConfirmation($obj['user'], $object);
    # Show confirmation page
    $template = Template::unhide($template, "SUCCESS");

}
elseif (!$error) {
    $template = Template::unhide($template, "CONFIRM");
}

# Plug it all into the templates
$res['content'] = $object->insertIntoTemplate($template);
$res['title'] = "Withdraw From Adventure";

?>
@


1.7
log
@change class names to match table names
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.6 2004/10/07 17:41:47 at Exp $
d55 1
a55 1
    $attendee->delete(TRUE, TRUE);
@


1.6
log
@get rid of utility/Utility.php
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.5 2004/09/20 20:38:39 at Exp $
d26 1
a26 1
$leader =& new Member();
@


1.5
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.4 2004/09/20 20:07:04 at Exp $
d49 1
a49 1
if (Utility::getval('continue') && !$error) {
@


1.4
log
@migrate away from DateTime
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.3 2004/09/18 02:40:22 at Exp $
d33 1
a33 1
    $template = Template::unhideBlock($template, "LEADER");
d39 1
a39 1
    $template = Template::unhideBlock($template, "DEADLINE");
d45 1
a45 1
    $template = Template::unhideBlock($template, "ALREADY");
d63 1
a63 1
    $template = Template::unhideBlock($template, "SUCCESS");
d67 1
a67 1
    $template = Template::unhideBlock($template, "CONFIRM");
@


1.3
log
@moved a lot of the controller code into the attendee and adventure pages
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.2 2004/09/08 22:45:37 at Exp $
d38 1
a38 2
$now =& new DateTime();
if ($now->compareTo($object->getSignupDate()) >= 0) {
@


1.2
log
@new navbar and tabbed-box scheme; coalesced templates
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.1.1.1 2004/05/30 03:10:35 at Exp $
d53 3
a55 2
    # Do this before removing someone from the waitlist, so there's room on the
    # adventure for the person on the waitlist
d57 1
a57 2

    if (!JoinAdventureManager::memberIsWaitlisted($object, $obj['user'])) {
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.6 2004/05/30 03:08:37 baron Exp $
d23 2
a24 3
$wrapper = file_get_contents("templates/adventure/withdraw-wrapper.php");
$box = file_get_contents("templates/adventure/withdraw-box.php");
$wrapper = $object->insertIntoTemplate($wrapper);
d27 1
a27 1
$leader->select($object->getUID());
d33 1
a33 1
    $box = Template::unhideBlock($box, "LEADER");
d40 1
a40 1
    $box = Template::unhideBlock($box, "DEADLINE");
d46 1
a46 1
    $box = Template::unhideBlock($box, "ALREADY");
d64 1
a64 1
    $box = Template::unhideBlock($box, "SUCCESS");
d68 1
a68 1
    $box = Template::unhideBlock($box, "CONFIRM");
d72 1
a72 5
$res['tab'] = "Withdraw";
$res['content'] = $object->insertIntoTemplate($box);
include_once("tabbed-boxes/adventure-read.php");
$res['content'] = Template::replaceValues($wrapper, array(
    "BOX" => $res['content']));
@


1.1.1.1
log
@init
@
text
@@
