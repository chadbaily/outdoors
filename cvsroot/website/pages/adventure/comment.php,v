head	1.8;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2005.01.31.13.15.43;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.30.20.48.40;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.23.12.51.27;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.20.20.38.39;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.22.45.37;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.25.02.54.48;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.20.14.21.23;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.8
log
@fix syntax errors
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: comment.php,v 1.7 2005/01/30 20:48:40 at Exp $
 *
 * Allows an attendee to comment on the adventure
 */

include_once("JoinAdventureManager.php");

# Make sure that the user has joined the adventure and has not already commented
$allowed = (JoinAdventureManager::checkIfMemberIsAttending($object, $obj['user'])
    && !JoinAdventureManager::checkIfMemberCommented($object, $obj['user']));

$template = file_get_contents("templates/adventure/comment.php");

if ($allowed) {

    # Create the form.  Generate a list of options:
    $formTemplate = file_get_contents("forms/adventure/comment.xml");
    $cmd =& $obj['conn']->createCommand();
    $cmd->loadQuery("sql/queries/generic-select.sql");
    $cmd->addParameter("table", "[_]rating");
    $result =& $cmd->executeReader();
    while ($row =& $result->fetchRow()) {
        $formTemplate = Template::block($formTemplate, "OPTION",
            array_change_key_case($row, 1));
    }

    $form =& new XmlForm(Template::finalize($formTemplate), true);
    $form->snatch();
    $form->validate();

    if ($form->isValid()) {
        $ac =& new adventure_comment();
        $ac->setText($form->getValue("comment"));
        $ac->setSubject($form->getValue("subject"));
        $ac->setRating($form->getValue("rating"));
        $ac->setFlag("private", $form->getValue("anonymous"));
        $ac->setAdventure($cfg['object']);
        $ac->insert();
        $template = Template::unhide($template, "THANKS");
    }
    else {
        $template = Template::replace($template, array(
            "FORM" => $form->toString()));
    }
}
else {
    $template = Template::unhide($template, "NOTALLOWED");
}

$res['content'] = $object->insertIntoTemplate($template);
$res['title'] = "Comment on Adventure";

?>
@


1.7
log
@add c_deleted column to database tables
@
text
@d20 1
a20 1
 * $Id: comment.php,v 1.6 2004/10/23 12:51:27 at Exp $
d39 2
a40 2
    $cmd->addParameter("table", "rating");
    $result =& cmd->executeReader();
@


1.6
log
@change class names to match table names
@
text
@d20 1
a20 1
 * $Id: comment.php,v 1.5 2004/09/20 20:38:39 at Exp $
d37 4
a40 1
    $result =& $obj['conn']->query("select * from [_]rating");
@


1.5
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: comment.php,v 1.4 2004/09/08 22:45:37 at Exp $
d48 1
a48 1
        $ac =& new AdventureComment();
@


1.4
log
@new navbar and tabbed-box scheme; coalesced templates
@
text
@d20 1
a20 1
 * $Id: comment.php,v 1.3 2004/08/25 02:54:48 at Exp $
d39 1
a39 1
        $formTemplate = Template::replaceWithinBlock($formTemplate, "OPTION",
d55 1
a55 1
        $template = Template::unhideBlock($template, "THANKS");
d58 1
a58 1
        $template = Template::replaceValues($template, array(
d63 1
a63 1
    $template = Template::unhideBlock($template, "NOTALLOWED");
@


1.3
log
@don't let members comment more than once on an adventure; limit form input
@
text
@d20 1
a20 1
 * $Id: comment.php,v 1.2 2004/07/20 14:21:23 at Exp $
d31 1
a31 2
$wrapper = file_get_contents("templates/adventure/comment-wrapper.php");
$box = file_get_contents("templates/adventure/comment-box.php");
d55 1
a55 1
        $box = Template::unhideBlock($box, "THANKS");
d58 1
a58 1
        $box = Template::replaceValues($box, array(
d63 1
a63 1
    $box = Template::unhideBlock($box, "NOTALLOWED");
d66 1
a66 5
# Plug it all into the templates
$res['content'] = $object->insertIntoTemplate($box);
include_once("tabbed-boxes/adventure-read.php");
$res['content'] = Template::replaceValues($object->insertIntoTemplate($wrapper),
    array("BOX" => $res['content']));
@


1.2
log
@put table name prefixes into code
@
text
@d20 1
a20 1
 * $Id: comment.php,v 1.1.1.1 2004/05/30 03:10:35 at Exp $
d25 5
a29 7
# Make sure that the user has joined the adventure
$hasJoined = FALSE;
foreach ($object->getAttendees() as $key => $att) {
    if ($att->getMember() == $cfg['user']) {
        $hasJoined = TRUE;
    }
}
d34 1
a34 1
if ($hasJoined) {
d64 1
a64 1
    $box = Template::unhideBlock($box, "NOTJOINED");
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: comment.php,v 1.6 2004/05/30 01:42:07 baron Exp $
d40 1
a40 1
    $result =& $obj['conn']->query("select * from t_rating");
@


1.1.1.1
log
@init
@
text
@@
