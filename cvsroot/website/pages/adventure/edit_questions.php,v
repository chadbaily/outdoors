head	1.9;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2005.01.30.20.48.40;	author at;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.23.12.51.27;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.06.14.19.04;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.21.14.05.41;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.20.20.38.39;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.13.15.19.42;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.08.22.45.37;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.20.14.21.23;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.9
log
@add c_deleted column to database tables
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: edit_questions.php,v 1.8 2004/10/23 12:51:27 at Exp $
 */

include_once("question.php");

# Create and validate the form.
$form =& new XMLForm("forms/adventure/edit_questions.xml");
$form->snatch();
$form->validate();

$template = file_get_contents("templates/adventure/edit_questions.php");
$template = $object->insertIntoTemplate($template);

if ($object->getStatus() == $cfg['status_id']['active']) {
    $template= Template::unhide($template, "NOTICE");
}

if ($form->isValid()) {
    # Create the question
    $question =& new question();
    $question->setAdventure($cfg['object']);
    $question->setType($form->getValue("type"));
    $question->setText($form->getValue("text"));
    $question->insert();
    # Plug stuff into the page about the question that just got added
    $template = Template::replace($template, array(
        "C_QUESTION_TITLE" => $question->getText()));
    $template = Template::unhide($template, "SUCCESS");
}

# Add the most popular questions into the page for instant copying
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/question/select-most-popular.sql");
$cmd->addParameter("adventure", $cfg['object']);
$cmd->addParameter("limit", 15);
$result =& $cmd->executeReader();
if (!$result->numRows()) {
    # There were no questions for this type of adventure.  Get the most
    # popular overall
    $cmd =& $obj['conn']->createCommand();
    $cmd->loadQuery("sql/queries/question/select-most-popular-overall.sql");
    $cmd->addParameter("limit", 15);
    $result =& $cmd->executeReader();
}
while ($row =& $result->fetchRow()) {
    $template = Template::block($template, "POPULAR", array(
        "A" => $cfg['object'],
        "Q" => $row['c_uid'],
        "TEXT" => $row['c_text']));
}

# Add existing questions into the page for reference
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/question/select-by-adventure.sql");
$cmd->addParameter("adventure", $cfg['object']);
$result =& $cmd->executeReader();
while ($row =& $result->fetchRow()) {
    $template = Template::block($template, "EXISTING", array(
        "Q" => $row['c_uid'],
        "TYPE" => $row['c_type'],
        "TEXT" => $row['c_text']));
}

$res['content'] = Template::replace($template, array(
    "FORM" => $form->toString()));
$res['title'] = "Edit Adventure Questions";

?>
@


1.8
log
@change class names to match table names
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.7 2004/10/06 14:19:04 at Exp $
d72 4
a75 2
$result =& $obj['conn']->query("select c_uid, c_type, c_text"
    . " from [_]question where c_adventure = $object->c_uid");
@


1.7
log
@cmd -> comm
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.6 2004/09/21 14:05:41 at Exp $
d23 1
a23 1
include_once("Question.php");
d39 1
a39 1
    $question =& new Question();
@


1.6
log
@add the most popular questions overall if there are none for this type of adventure
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.5 2004/09/20 20:38:39 at Exp $
d51 5
a55 5
$comm =& $obj['conn']->createCommand();
$comm->loadQuery("sql/queries/question/select-most-popular.sql");
$comm->addParameter("adventure", $cfg['object']);
$comm->addParameter("limit", 15);
$result =& $comm->executeReader();
d59 4
a62 4
    $comm =& $obj['conn']->createCommand();
    $comm->loadQuery("sql/queries/question/select-most-popular-overall.sql");
    $comm->addParameter("limit", 15);
    $result =& $comm->executeReader();
@


1.5
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.4 2004/09/13 15:19:42 at Exp $
d56 8
@


1.4
log
@show most popular questions by adventure type, not most popular overall
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.3 2004/09/08 22:45:37 at Exp $
d34 1
a34 1
    $template= Template::unhideBlock($template, "NOTICE");
d45 1
a45 1
    $template = Template::replaceValues($template, array(
d47 1
a47 1
    $template = Template::unhideBlock($template, "SUCCESS");
d57 1
a57 1
    $template = Template::replaceWithinBlock($template, "POPULAR", array(
d67 1
a67 1
    $template = Template::replaceWithinBlock($template, "EXISTING", array(
d73 1
a73 1
$res['content'] = Template::replaceValues($template, array(
@


1.3
log
@new navbar and tabbed-box scheme; coalesced templates
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.2 2004/07/20 14:21:23 at Exp $
d51 5
a55 3
$result =& $obj['conn']->query("select c_uid, c_text,"
    . " count(c_text) as number from [_]question group by c_text "
    . " order by number desc limit 10");
@


1.2
log
@put table name prefixes into code
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.1.1.1 2004/05/30 03:10:35 at Exp $
d30 2
a31 3
# Create templates
$wrapper = file_get_contents("templates/adventure/edit_questions-wrapper.php");
$box = file_get_contents("templates/adventure/edit_questions-box.php");
d34 1
a34 1
    $wrapper= Template::unhideBlock($wrapper, "NOTICE");
d45 1
a45 1
    $box = Template::replaceValues($box, array(
d47 1
a47 1
    $box = Template::unhideBlock($box, "SUCCESS");
d55 1
a55 1
    $box = Template::replaceWithinBlock($box, "POPULAR", array(
d65 1
a65 1
    $box = Template::replaceWithinBlock($box, "EXISTING", array(
d71 1
a71 1
$res['content'] = Template::replaceValues($box, array(
a72 5
$res['tab'] = "Edit Questions";
include_once("tabbed-boxes/adventure-read.php");
$res['content'] = Template::replaceValues($wrapper, array(
    "BOX" => $res['content'],
    "C_TITLE" => $object->getTitle()));
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: edit_questions.php,v 1.5 2004/05/30 01:42:07 baron Exp $
d53 1
a53 1
    . " count(c_text) as number from t_question group by c_text "
d64 1
a64 1
    . " from t_question where c_adventure = $object->c_uid");
@


1.1.1.1
log
@init
@
text
@@
