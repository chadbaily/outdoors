head	1.6;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2004.10.23.12.54.10;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.07.17.41.47;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.20.20.38.40;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.08.22.45.37;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.20.14.21.23;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.6
log
@change class names to match table names
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: set_flags.php,v 1.5 2004/10/07 17:41:47 at Exp $
 */

$template = file_get_contents("templates/common/set_flags.php");

/*Here is a useful query for determining what the status of the object's flags
 * are, as a sanity check (not needed in this code, because we already have all
 * this information in the object and in the $cfg['flag'] array).
 *      select fl.c_title,
 *      case when (fl.c_bitmask & ob.c_flags) then 1 else 0 end as checked
 *      from [_]flag as fl, $object->table as ob
 *      where ob.c_uid = $object->c_uid
*/

# Get an array of checkboxes that the user checked
$checkboxes = postval('flags');
if (!is_array($checkboxes)) {
    $checkboxes = array();
}
$posted = (postval('posted'));

# Whether any modifications were made
$dirty = false;

foreach (array_keys($cfg['flag']) as $flag) {
    # We'll check the checkbox if the flag is set
    $set = $object->getFlag($flag);

    # If the flag is different between the object and the form, update the
    # object to match the form
    if ($posted && (in_array($flag, $checkboxes) xor $set)) {
        $object->setFlag($flag, !$object->getFlag($flag));
        $dirty = true;
        $set = !$set;
    }
    # Plug the info into the template row...
    $template = Template::block($template, "FLAG", array(
        "C_TITLE" => $flag,
        "CHECKED" => ($set ? "checked" : "")));
}

if ($dirty) {
    # Say that the flags were updated
    $object->update();
    $template = Template::unhide($template, "DIRTY");
}

# Plug it all into the template
$res['content'] = Template::replace($template, array(
    "TABLE" => get_class($object)));
$res['title'] = "Set Flags";

?>
@


1.5
log
@get rid of utility/Utility.php
@
text
@d20 1
a20 1
 * $Id: set_flags.php,v 1.4 2004/09/20 20:38:40 at Exp $
a22 1
# Create templates
d69 1
a69 1
    "TABLE" => $object->getTable()));
@


1.4
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: set_flags.php,v 1.3 2004/09/08 22:45:37 at Exp $
d36 1
a36 1
$checkboxes = Utility::postval('flags');
d40 1
a40 1
$posted = (Utility::postval('posted'));
@


1.3
log
@new navbar and tabbed-box scheme; coalesced templates
@
text
@d20 1
a20 1
 * $Id: set_flags.php,v 1.2 2004/07/20 14:21:23 at Exp $
d57 1
a57 1
    $template = Template::replaceWithinBlock($template, "FLAG", array(
d65 1
a65 1
    $template = Template::unhideBlock($template, "DIRTY");
d69 1
a69 1
$res['content'] = Template::replaceValues($template, array(
@


1.2
log
@put table name prefixes into code
@
text
@d20 1
a20 1
 * $Id: set_flags.php,v 1.1.1.1 2004/05/30 03:10:35 at Exp $
d24 1
a24 2
$wrapper = file_get_contents("templates/common/set_flags-wrapper.php");
$box = file_get_contents("templates/common/set_flags-box.php");
d57 1
a57 1
    $box = Template::replaceWithinBlock($box, "FLAG", array(
d65 1
a65 1
    $box = Template::unhideBlock($box, "DIRTY");
d68 3
a70 6
# Plug it all into the templates.  No need to set the active tab.
$res['content'] = $box;
include_once("tabbed-boxes/common-properties.php");
$res['content'] = Template::replaceValues($wrapper, array(
    "TABLE" => $object->getTable(),
    "BOX" => $res['content']));
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: set_flags.php,v 1.5 2004/05/30 01:42:13 baron Exp $
d32 1
a32 1
 *      from t_flag as fl, $object->table as ob
@


1.1.1.1
log
@init
@
text
@@
