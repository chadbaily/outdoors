head	1.9;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2004.11.03.21.58.20;	author at;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.23.12.52.52;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.07.17.41.47;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.20.20.38.39;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.18.15.51.25;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.18.02.38.25;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.08.22.45.37;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.02.18.26.02;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.9
log
@delete answers when withdrawing an attendee
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: withdraw.php,v 1.8 2004/10/23 12:52:52 at Exp $
 *
 * Purpose: allows a leader to withdraw an attendee from an adventure.
 */

include_once("JoinAdventureManager.php");

$adventure =& new adventure();
$adventure->select($object->getAdventure());
$member =& new member();
$member->select($object->getMember());

$template = file_get_contents("templates/attendee/withdraw.php");
$template = $object->insertIntoTemplate(
    $member->insertIntoTemplate(
        $adventure->insertIntoTemplate($template)));

if (getval('waitlist')) {
    # Before removing someone from the waitlist, delete the attendee so there's
    # room on the adventure for the waitlisted person in case the adventure is
    # full.
    $object->delete(TRUE, TRUE);
    # Send a confirmation email
    JoinAdventureManager::sendWithdrawalConfirmation($member, $adventure);

    # If specified, move the first person off the waitlist
    if ($object->getStatus() == $cfg['status_id']['default']
        && getval('waitlist') == "true")
    {
        $moved = JoinAdventureManager::removeFirstWaitlistedMember($adventure);
        if ($moved) {
            $template = Template::unhide($template, "MOVED");
            $template = Template::replace($template, array(
                "MEMBER_NAME" => $moved->getFullName()));
        }
        else {
            $template = Template::unhide($template, "NO_MOVED");
        }
    }

    # Show confirmation page
    $template = Template::unhide($template, "SUCCESS");
}
else {
    $template = Template::unhide($template, "CONFIRM");
}

$res['content'] = $template;
$res['title'] = "Withdraw Attendee from Adventure";

?>
@


1.8
log
@change class names to match table names; use getChildren(); merge code from AbsenceManager
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.7 2004/10/07 17:41:47 at Exp $
d41 1
a41 1
    $object->delete(TRUE);
@


1.7
log
@get rid of utility/Utility.php
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.6 2004/09/20 20:38:39 at Exp $
d27 1
a27 1
$adventure =& new Adventure();
d29 1
a29 1
$member =& new Member();
@


1.6
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.5 2004/09/18 15:51:25 at Exp $
d37 1
a37 1
if (Utility::getval('waitlist')) {
d47 1
a47 1
        && Utility::getval('waitlist') == "true")
@


1.5
log
@add the choice of whether to move someone off the waitlist
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.4 2004/09/18 02:38:25 at Exp $
d51 2
a52 2
            $template = Template::unhideBlock($template, "MOVED");
            $template = Template::replaceValues($template, array(
d56 1
a56 1
            $template = Template::unhideBlock($template, "NO_MOVED");
d61 1
a61 1
    $template = Template::unhideBlock($template, "SUCCESS");
d64 1
a64 1
    $template = Template::unhideBlock($template, "CONFIRM");
@


1.4
log
@added joined_date column
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.3 2004/09/08 22:45:37 at Exp $
d37 5
a41 2
if (Utility::getval('continue')) {
    $object->delete(TRUE, TRUE);
d44 16
@


1.3
log
@new navbar and tabbed-box scheme; coalesced templates
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.2 2004/09/02 18:26:02 at Exp $
a37 1

@


1.2
log
@show the attendee's name, not the user's name
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.1.1.1 2004/05/30 03:10:35 at Exp $
d32 4
a35 5
# Create templates
$wrapper = file_get_contents("templates/attendee/withdraw-wrapper.php");
$box = file_get_contents("templates/attendee/withdraw-box.php");
$wrapper = $object->insertIntoTemplate($wrapper);
$box = $object->insertIntoTemplate($box);
d43 1
a43 1
    $box = Template::unhideBlock($box, "SUCCESS");
d46 1
a46 1
    $box = Template::unhideBlock($box, "CONFIRM");
d49 1
a49 7
$res['content'] = $box;
$res['tab'] = "Withdraw";
include_once("tabbed-boxes/attendee-read.php");
$res['content'] = Template::replaceValues($wrapper, array(
    "BOX" => $res['content'],
    "C_FULL_NAME" => $member->getFullName(),
    "C_TITLE" => $adventure->getTitle()));
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: withdraw.php,v 1.5 2004/05/30 01:42:11 baron Exp $
d55 1
@


1.1.1.1
log
@init
@
text
@@
