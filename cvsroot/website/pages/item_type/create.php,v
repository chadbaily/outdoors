head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	2005.02.08.14.41.03;	author at;	state Exp;
branches;
next	1.10;

1.10
date	2005.02.07.18.49.28;	author at;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.23.12.56.31;	author at;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.07.17.41.50;	author at;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.06.17.52.39;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.04.12.59.40;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.03.22.49.56;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.02.03.14.17;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.24.17.39.46;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.20.20.38.40;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.19.02.48.34;	author at;	state Exp;
branches;
next	;


desc
@@


1.11
log
@fix redirects
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: create.php,v 1.10 2005/02/07 18:49:28 at Exp $
 */

# Create templates
$template = file_get_contents("templates/item_type/create.php");

# Create and validate the form.
$formT = file_get_contents("forms/item_type/create.xml");
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/generic-select.sql");
$cmd->addParameter("table", "[_]item_category");
$cmd->addParameter("orderby", "c_title");
$result =& $cmd->executeReader();
while ($row =& $result->fetchRow()) {
    $formT = Template::block($formT, "CAT",
        array_change_key_case($row, 1));
}
$form =& new XMLForm(Template::finalize($formT), true);

$form->snatch();
$form->validate();

if ($form->isValid()) {
    $object =& new item_type();
    $object->setTitle($form->getValue("title"));
    $object->setCategory($form->getValue("category"));
    $object->insert();
    redirect("$cfg[base_url]/members/item_type/edit_features/$object->c_uid");
}
else {
    # Plug the form into the template
    $res['content'] = Template::replace($template, array(
        "FORM" => $form->toString()));

}

$res['title'] = "Create a New Item Type";

?>
@


1.10
log
@friendlyurls
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.9 2004/10/23 12:56:31 at Exp $
d47 1
a47 1
    redirect("members/item_type/edit_features/$object->c_uid");
@


1.9
log
@edit_attributes -> edit_features, change class names to match table names
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.8 2004/10/07 17:41:50 at Exp $
d47 1
a47 2
    redirect("members.php?page=item_type&action={$cfg['action_id']['edit_features']}"
        . "&object=$object->c_uid");
@


1.8
log
@get rid of utility/Utility.php
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.7 2004/10/06 17:52:39 at Exp $
d43 1
a43 1
    $object =& new ItemType();
d47 1
a47 1
    redirect("members.php?page=item_type&action={$cfg['action_id']['edit_attributes']}"
@


1.7
log
@comm -> cmd
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.6 2004/10/04 12:59:40 at Exp $
d47 1
a47 1
    Utility::redirect("members.php?page=item_type&action={$cfg['action_id']['edit_attributes']}"
@


1.6
log
@set the category when creating an item type
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.5 2004/10/03 22:49:56 at Exp $
d28 5
a32 5
$comm =& $obj['conn']->createCommand();
$comm->loadQuery("sql/queries/generic-select.sql");
$comm->addParameter("table", "[_]item_category");
$comm->addParameter("orderby", "c_title");
$result =& $comm->executeReader();
@


1.5
log
@organize item types by category
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.4 2004/10/02 03:14:17 at Exp $
d45 1
@


1.4
log
@redirect right to the edit_attributes action
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.3 2004/09/24 17:39:46 at Exp $
d27 12
a38 1
$form =& new XmlForm("forms/item_type/create.xml");
@


1.3
log
@rebuild item system, making most things 'features' of items; no hardcoded title and description
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.2 2004/09/20 20:38:40 at Exp $
d35 1
a35 1
    Utility::redirect("members.php?page=item_type&action={$cfg['action_id']['read']}"
@


1.2
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.1 2004/09/19 02:48:34 at Exp $
a33 1
    $object->setDescription($form->getValue("description"));
@


1.1
log
@init
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.6 2004/09/08 22:45:37 at Exp $
d41 1
a41 1
    $res['content'] = Template::replaceValues($template, array(
@

