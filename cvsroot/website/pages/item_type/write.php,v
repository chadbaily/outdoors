head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2004.10.23.12.56.31;	author at;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.06.17.52.39;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.05.22.37.30;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.03.22.49.56;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.24.17.39.46;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.20.20.38.40;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.19.02.48.34;	author at;	state Exp;
branches;
next	;


desc
@@


1.7
log
@edit_attributes -> edit_features, change class names to match table names
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: write.php,v 1.6 2004/10/06 17:52:39 at Exp $
 */

# Create templates
$template = file_get_contents("templates/item_type/write.php");
$template = $object->insertIntoTemplate($template);

# Create the form.
$formT = file_get_contents("forms/item_type/write.xml");
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/generic-select.sql");
$cmd->addParameter("table", "[_]item_category");
$cmd->addParameter("orderby", "c_title");
$result =& $cmd->executeReader();
while ($row =& $result->fetchRow()) {
    $formT = Template::block($formT, "CAT",
        array_change_key_case($row, 1));
}
foreach ($object->getChildren("item_type_feature") as $attr) {
    $formT = Template::block($formT, "OPTION",
        $attr->getVarArray());
}
$form =& new XMLForm(Template::finalize($formT), true);

# Put the object's information into the form
$form->setValue("category", $object->getCategory());
$form->setValue("title", $object->getTitle());
$form->setValue("primary-feature", $object->getPrimaryFeature());
$form->setValue("secondary-feature", $object->getSecondaryFeature());

# Validate the form
$form->snatch();
$form->validate();

if ($form->isValid()) {
    # Update the object with the form information
    $object->setTitle($form->getValue("title"));
    $object->setCategory($form->getValue("category"));
    if ($form->getValue("secondary-feature")) {
        $object->setSecondaryFeature($form->getValue("secondary-feature"));
    }
    if ($form->getValue("primary-feature")) {
        $object->setPrimaryFeature($form->getValue("primary-feature"));
    }

    # Save the modified object
    $object->update();
    $template = Template::unhide($template, "SUCCESS");
}

$res['content'] = Template::replace($template,
    array("FORM" => $form->toString()));
$res['title'] = "Edit Item Type Details";

?>
@


1.6
log
@comm -> cmd
@
text
@d20 1
a20 1
 * $Id: write.php,v 1.5 2004/10/05 22:37:30 at Exp $
d38 1
a38 1
foreach ($object->getAttributes() as $attr) {
@


1.5
log
@add a secondary description column to item types
@
text
@d20 1
a20 1
 * $Id: write.php,v 1.4 2004/10/03 22:49:56 at Exp $
d29 5
a33 5
$comm =& $obj['conn']->createCommand();
$comm->loadQuery("sql/queries/generic-select.sql");
$comm->addParameter("table", "[_]item_category");
$comm->addParameter("orderby", "c_title");
$result =& $comm->executeReader();
@


1.4
log
@organize item types by category
@
text
@d20 1
a20 1
 * $Id: write.php,v 1.3 2004/09/24 17:39:46 at Exp $
d48 1
d58 3
@


1.3
log
@rebuild item system, making most things 'features' of items; no hardcoded title and description
@
text
@d20 1
a20 1
 * $Id: write.php,v 1.2 2004/09/20 20:38:40 at Exp $
d29 9
d45 1
d56 1
@


1.2
log
@shortened template function names
@
text
@d20 1
a20 1
 * $Id: write.php,v 1.1 2004/09/19 02:48:34 at Exp $
d28 6
a33 1
$form =& new XMLForm("forms/item_type/write.xml");
d35 1
a35 1
# Put the item_type's information into the form
d37 1
a37 1
$form->setValue("description", $object->getDescription());
d44 1
a44 1
    # Update the item_type with the form information
d46 3
a48 1
    $object->setDescription($form->getValue("description"));
d50 1
a50 1
    # Save the modified item_type
@


1.1
log
@init
@
text
@d20 1
a20 1
 * $Id: write.php,v 1.3 2004/09/08 22:45:37 at Exp $
d45 1
a45 1
    $template = Template::unhideBlock($template, "SUCCESS");
d48 1
a48 1
$res['content'] = Template::replaceValues($template,
@

