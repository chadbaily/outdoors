head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2005.02.08.14.41.03;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.07.18.49.28;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.14.15.08.49;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.20.15.17.47;	author at;	state Exp;
branches;
next	;


desc
@@


1.4
log
@fix redirects
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: create.php,v 1.3 2005/02/07 18:49:28 at Exp $
 */

$formT = file_get_contents("forms/checkout/create.xml");
$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/member/select-active.sql");
$result =& $cmd->executeReader();
while ($row =& $result->fetchRow()) {
    $formT = Template::block($formT, "member", $row);
}

$cmd =& $obj['conn']->createCommand();
$cmd->loadQuery("sql/queries/generic-select.sql");
$cmd->addParameter("table", "[_]activity_category");
$cmd->addParameter("orderby", "c_uid");
$result =& $cmd->executeReader();
while ($row =& $result->fetchRow()) {
    $formT = Template::block($formT, "option", $row);
}

$cmd->loadQuery("sql/queries/member/select-active.sql");
$form =& new XmlForm(Template::finalize($formT), true);
$form->snatch();
$form->validate();

if ($form->isValid()) {
    $object =& new checkout();
    $object->setMember($form->getValue("member"));
    $object->setActivity($form->getValue("activity"));
    $object->insert();
    redirect("$cfg[base_url]/members/checkout/write/$object->c_uid");
}
else {
    $template = file_get_contents("templates/checkout/create.php");
    $res['content'] = template::replace($template, array("form" => $form->toString()));
    $res['title'] = "Choose a Member and Category";
}

?>
@


1.3
log
@friendlyurls
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.2 2005/01/14 15:08:49 at Exp $
d50 1
a50 1
    redirect("members/checkout/write/$object->c_uid");
@


1.2
log
@initial release of checkin/checkout system
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.1 2004/11/20 15:17:47 at Exp $
d50 1
a50 2
    redirect("members.php?page=checkout&action={$cfg['action_id']['write']}"
        . "&object=$object->c_uid");
@


1.1
log
@create checkout system first incarnation; checking items out is at the level of individual items and is too precise.  This system is not deployed.
@
text
@d20 1
a20 1
 * $Id: create.php,v 1.2 2004/10/28 01:41:36 at Exp $
d30 11
d48 1
d56 1
a56 1
    $res['title'] = "Choose a Member";
@

