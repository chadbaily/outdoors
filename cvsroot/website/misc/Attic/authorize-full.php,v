head	1.2;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.07.25.20.47.26;	author at;	state dead;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.2
log
@moved to authorize/
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: authorize-full.php,v 1.1 2004/05/30 03:10:35 at Exp $
 */
# If the browser sent HTTP auth info, we can authenticate against the database.
# The user may have already been authenticated on a previous request, and if so
# his browser will re-send the HTTP username (email address) and password every
# time.

if (isset($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW'])) {
    $cmd =& $obj['conn']->createCommand();
    $cmd->loadQuery("sql/queries/misc/login-full.sql");
    $cmd->addParameter("email", $_SERVER['PHP_AUTH_USER']);
    $cmd->addParameter("password", $_SERVER['PHP_AUTH_PW']);
    $result =& $cmd->executeReader();

    # If there are any rows, the email address exists in the database.
    if ($result->numRows()) {  

        $row = $result->fetchRow();
        if ($row['password_correct']) {
        	# We now know for sure what the user's ID is!
            $cfg['user'] = $row['c_uid'];

            # We need to check that the user has an active membership, and if
            # not the user can't access this page. We check for various special
            # cases and redirect as needed.
            #
            # a) The user has no memberships and needs to go to the
            #    renew page.
            if (!$row['total']) {
                Utility::redirect("members.php?page=join&action=renew");
            }
            # b) The user has no valid memberships (memberships that are
            #    active, the begin date is before now and the end date is
            #    after now)
            if (!$row['valid']) {
                # There are two cases: the user has expired memberships and
                # needs to renew, or the member has an inactive, pending
                # membership and needs to wait for activation.
                if ($row['pending']) {
                    Utility::redirect("members.php?page=join&action=inactive");
                }
                elseif ($row['expired']) {
                    Utility::redirect("members.php?page=join&action=renew");
                }
                else {
                    # If we got here, we have a real problem: something's
                    # wrong with the query or something.
                    trigger_error("There's a problem deciding what to do "
                        . "with this user", E_USER_ERROR);
                }
            }
        }
    }
}

# If there's still no $cfg['user'], we need to get the user to enter an email
# address and password.
if (!$cfg['user']) {
    header('WWW-Authenticate: Basic realm="'
        . 'Club Members Area (your username is your email address)"');
    header('HTTP/1.0 401 Unauthorized');
    include("error-401.php");
    exit;
}
# If we got here, we have identified the user's c_uid.
else {
    $obj['user'] =& new Member();
    $obj['user']->select($cfg['user']);
}

?>
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: authorize-full.php,v 1.6 2004/05/30 01:41:58 baron Exp $
@


1.1.1.1
log
@init
@
text
@@
