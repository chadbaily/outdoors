head	1.5;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2005.01.30.20.48.40;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.22.52.56;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.26.01.03.21;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.20.14.38.22;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.35;	author at;	state Exp;
branches;
next	;


desc
@@


1.5
log
@add c_deleted column to database tables
@
text
@select
    at.c_uid as c_attendee,
    me.c_uid as t_member,
    me.c_full_name,
    me.c_email,
    me.c_gender,
    me.c_birth_date,
    count(ab.c_uid) as c_absences
from
    [_]attendee as at
    inner join [_]member as me on at.c_member = me.c_uid
    inner join [_]status as st on at.c_status = st.c_uid
    left outer join [_]absence as ab on ab.c_attendee = at.c_uid
        and ab.c_deleted <> 1
where
    at.c_adventure = {adventure,int}
    and (st.c_title = "active" or st.c_title = "default")
    and at.c_deleted <> 1
    and me.c_deleted <> 1
group by me.c_uid
order by at.c_created_date
@


1.4
log
@added in number of absences
@
text
@d2 20
a21 17
        at.c_uid as c_attendee,
        me.c_uid as t_member,
        me.c_full_name,
        me.c_email,
        me.c_gender,
        me.c_birth_date,
        count(ab.c_uid) as c_absences
    from
        [_]attendee as at
        inner join [_]member as me on at.c_member = me.c_uid
        inner join [_]status as st on at.c_status = st.c_uid
        left outer join [_]absence as ab on ab.c_attendee = at.c_uid
    where
        at.c_adventure = {adventure,int}
        and (st.c_title = "active" or st.c_title = "default")
    group by me.c_uid
    order by at.c_created_date
@


1.3
log
@fixed bug: missing parens in where clause caused all rows to be returned
@
text
@d7 2
a8 1
        me.c_birth_date
d13 1
d17 1
a17 1
    -- group by me.c_uid
@


1.2
log
@added prefix names to tables
@
text
@d14 1
a14 1
        and st.c_title = "active" or st.c_title = "default"
@


1.1
log
@Initial revision
@
text
@d9 3
a11 3
        t_attendee as at
        inner join t_member as me on at.c_member = me.c_uid
        inner join t_status as st on at.c_status = st.c_uid
@


1.1.1.1
log
@init
@
text
@@
