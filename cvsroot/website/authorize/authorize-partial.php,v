head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2005.02.01.14.21.21;	author at;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.28.15.21.08;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.07.02.49.28;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.16.22.00.49;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.16.19.28.21;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.25.20.35.37;	author at;	state Exp;
branches;
next	;


desc
@@


1.6
log
@fix sql queries
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 *
 * $Id: authorize-partial.php,v 1.5 2004/12/28 15:21:08 at Exp $
 */
# If the 'user' cookie exists, we can use that.  Test to see if this user is in
# the database, but only if there is NOT any auth data:
if (isset($_COOKIE['user']) && $_COOKIE['user']
    && $cfg['auth']['user']
    && $cfg['auth']['pass'])
{
    $result =& $obj['conn']->query("select current_timestamp, [_]member.* "
        . "from [_]member where c_uid = {uid,int}",
        array('uid' => $_COOKIE['user']));
    if ($result->numRows()) {
        # We're good to go.
        $obj['user'] =& new Member();
        $obj['user']->initFromRow($result->fetchRow());
        $cfg['user'] = $obj['user']->getUID();
        $cfg['db_server_time'] = $row['current_timestamp'];
        return;
    }
}

# If the browser sent auth, we can authenticate against the database.

if ($cfg['auth']['user'] && $cfg['auth']['pass']) {
    $result = $obj['conn']->query("select * from [_]member "
        . "where c_password = {password,char,30} and c_email = {username,char,60}",
        array('username' => $cfg['auth']['user'],
            'password' => $cfg['auth']['pass']));
    # If there are any rows, the email address exists in the database and the
    # user knows the right password.
    if ($result->numRows()) {
        $obj['user'] =& new Member();
        $obj['user']->initFromRow($result->fetchRow());
        $cfg['user'] = $obj['user']->getUID();
        return;
    }
}

# If there's still no $cfg['user'], we need to get the user to enter an email
# address and password.
if (!$cfg['user']) {
    $cfg['login_status'] = false;
}

?>
@


1.5
log
@check DB server for time differences and abort if there is > 30 sec difference
@
text
@d20 1
a20 1
 * $Id: authorize-partial.php,v 1.4 2004/11/07 02:49:28 at Exp $
d28 1
a28 1
    $result =& $obj['conn']->query("select current_time, * "
@


1.4
log
@add session-tracking to website
@
text
@d20 1
a20 1
 * $Id: authorize-partial.php,v 1.3 2004/08/16 22:00:49 at Exp $
d28 2
a29 1
    $result =& $obj['conn']->query("select * from [_]member where c_uid = {uid,int}",
d36 1
@


1.3
log
@set cookies before redirecting on login; check cookies when doing a partial auth
@
text
@d20 1
a20 1
 * $Id: authorize-partial.php,v 1.2 2004/08/16 19:28:21 at Exp $
d25 3
a27 2
        && !isset($cfg['PHP_AUTH_USER'])
        && !isset($cfg['PHP_AUTH_PW'])) {
d39 1
a39 9
# If the browser sent auth cookies, we can authenticate against the database.
# The user may have already been authenticated on a previous request, and if so
# his browser will re-send the username (email address) and password every
# time.  Username and password cookies are base64 encoded to make them trivially
# non-obvious.
if (isset($_COOKIE['PHP_AUTH_USER']) && isset($_COOKIE['PHP_AUTH_PW'])) {
    $cfg['PHP_AUTH_USER'] = base64_decode($_COOKIE['PHP_AUTH_USER']);
    $cfg['PHP_AUTH_PW'] = base64_decode($_COOKIE['PHP_AUTH_PW']);
}
d41 1
a41 1
if (isset($cfg['PHP_AUTH_USER']) && isset($cfg['PHP_AUTH_PW'])) {
d44 2
a45 2
        array('username' => $cfg['PHP_AUTH_USER'],
            'password' => $cfg['PHP_AUTH_PW']));
@


1.2
log
@Fix refusal to authorize because of not setting cfg vars based on cookies
@
text
@d20 1
a20 1
 * $Id: authorize-partial.php,v 1.1 2004/07/25 20:35:37 at Exp $
d25 2
a26 2
        && !isset($_COOKIE['PHP_AUTH_USER'])
        && !isset($_COOKIE['PHP_AUTH_PW'])) {
a42 1

@


1.1
log
@moved from misc/
@
text
@d5 1
a5 1
 * 
d10 1
a10 1
 * 
d15 1
a15 1
 * 
d19 2
a20 2
 * 
 * $Id: authorize-partial.php,v 1.2 2004/07/20 14:22:35 at Exp $
d39 5
d45 5
d52 2
a53 2
        array('username' => base64_decode($_COOKIE['PHP_AUTH_USER']),
            'password' => base64_decode($_COOKIE['PHP_AUTH_PW'])));
@

