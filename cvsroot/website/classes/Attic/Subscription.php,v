head	1.4;
access;
symbols
	init:1.1.1.1 socialclub:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2004.10.21.20.54.20;	author at;	state dead;
branches;
next	1.3;

1.3
date	2004.09.09.22.59.21;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.20.14.11.06;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.30.03.10.36;	author at;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.30.03.10.36;	author at;	state Exp;
branches;
next	;


desc
@@


1.4
log
@classes moved to files that match the database table names
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: Subscription.php,v 1.3 2004/09/09 22:59:21 at Exp $
 */

include_once("DatabaseObject.php");
include_once("EmailList.php");

class Subscription extends DatabaseObject {
    // {{{declarations
    var $c_list = null;
    var $c_email = null;
    var $c_password = null;
    // }}}

    /* {{{constructor
     *
     */
    function Subscription() {
        $this->DatabaseObject();
        $this->table = "[_]subscription";
    } //}}}

    /* {{{getList
     *
     */
    function getList() {
        return $this->c_list;
    } //}}}
    
    /* {{{setList
     *
     */
    function setList($value) {
        $this->c_list = $value;
    } //}}}

    /* {{{getEmail
     *
     */
    function getEmail() {
        return $this->c_email;
    } //}}}
    
    /* {{{setEmail
     *
     */
    function setEmail($value) {
        $this->c_email = $value;
    } //}}}

    /* {{{getPassword
     *
     */
    function getPassword() {
        return $this->c_password;
    } //}}}
    
    /* {{{setPassword
     *
     */
    function setPassword($value) {
        $this->c_password = $value;
    } //}}}

}
?>
@


1.3
log
@subscriptions can now be batched and done all at once
@
text
@d20 1
a20 1
 * $Id: Subscription.php,v 1.2 2004/07/20 14:11:06 at Exp $
@


1.2
log
@put table name prefixes into code
@
text
@d20 1
a20 1
 * $Id: Subscription.php,v 1.1.1.1 2004/05/30 03:10:36 at Exp $
a38 12
    } //}}}

    /* {{{delete
     */
    function delete($reallyDelete = FALSE, $cascade = FALSE) {
        global $obj;
        $list =& new EmailList();
        $list->select($this->c_list);
        $list->unsubscribe($this);
        $this->ensureUID(__LINE__, __FILE__);
        $obj['conn']->query("delete from $this->table where c_uid = {uid,int}",
            array('uid' => $this->c_uid));
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: Subscription.php,v 1.2 2004/05/30 03:08:37 baron Exp $
d38 1
a38 1
        $this->table = "t_subscription";
@


1.1.1.1
log
@init
@
text
@@
