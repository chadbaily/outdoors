head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2004.10.21.20.54.19;	author at;	state dead;
branches;
next	1.5;

1.5
date	2004.10.05.22.37.29;	author at;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.03.22.49.55;	author at;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.02.02.02.56;	author at;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.24.17.39.46;	author at;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.19.02.48.34;	author at;	state Exp;
branches;
next	;


desc
@@


1.6
log
@classes moved to files that match the database table names
@
text
@<?php
/*
 * This file is part of SocialClub (http://socialclub.sourceforge.net)
 * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307  USA
 * 
 * $Id: ItemType.php,v 1.5 2004/10/05 22:37:29 at Exp $
 */

include_once("DatabaseObject.php");
include_once("ItemTypeAttribute.php");

class ItemType extends DatabaseObject {
    // {{{declarations
    var $c_title = null;
    var $c_category = null;
    var $c_primary_feature = null;
    var $c_secondary_feature = null;
    var $attributes = null;
    // }}}

    /* {{{constructor
     *
     */
    function ItemType() {
        $this->DatabaseObject();
        $this->table = "[_]item_type";
        $this->cascadeFunctions[] = "getAttributes";
    } //}}}

    /* {{{getSecondaryFeature
     */
    function getSecondaryFeature() {
        return $this->c_secondary_feature;
    } //}}}
    
    /* {{{setSecondaryFeature
     */
    function setSecondaryFeature($value) {
        $this->c_secondary_feature = $value;
    } //}}}

    /* {{{getPrimaryFeature
     */
    function getPrimaryFeature() {
        return $this->c_primary_feature;
    } //}}}
    
    /* {{{setPrimaryFeature
     */
    function setPrimaryFeature($value) {
        $this->c_primary_feature = $value;
    } //}}}

    /* {{{getCategory
     */
    function getCategory() {
        return $this->c_category;
    } //}}}
    
    /* {{{setCategory
     */
    function setCategory($value) {
        $this->c_category = $value;
    } //}}}

    /* {{{getTitle
     */
    function getTitle() {
        return $this->c_title;
    } //}}}
    
    /* {{{setTitle
     */
    function setTitle($value) {
        $this->c_title = $value;
    } //}}}

    /* {{{getAttributes
     */
    function getAttributes($refresh = FALSE) {
        if (is_null($this->attributes) || $refresh) {
            $this->initAttributes();
        }
        return $this->attributes;
    } //}}}

    /* {{{initAttributes
     */
    function initAttributes() {
        global $obj;
        global $cfg;
        $this->ensureUID(__LINE__, __FILE__);
        $this->attributes = array();
        $result = $obj['conn']->query("select * from [_]item_type_attribute "
            . "where c_type=$this->c_uid order by c_uid");
        while ($row = $result->fetchRow()) {
            $this->attributes[$row['c_uid']] =& new ItemTypeAttribute();
            $this->attributes[$row['c_uid']]->initFromRow($row);
        }
    } //}}}

}
?>
@


1.5
log
@add a secondary description column to item types
@
text
@d20 1
a20 1
 * $Id: ItemType.php,v 1.4 2004/10/03 22:49:55 at Exp $
@


1.4
log
@organize item types by category
@
text
@d20 1
a20 1
 * $Id: ItemType.php,v 1.3 2004/10/02 02:02:56 at Exp $
d31 1
d42 12
@


1.3
log
@order item attributes in the order they're created
@
text
@d20 1
a20 1
 * $Id: ItemType.php,v 1.2 2004/09/24 17:39:46 at Exp $
d29 1
d53 12
@


1.2
log
@rebuild item system, making most things 'features' of items; no hardcoded title and description
@
text
@d20 1
a20 1
 * $Id: ItemType.php,v 1.1 2004/09/19 02:48:34 at Exp $
d83 1
a83 1
            . "where c_type=$this->c_uid");
@


1.1
log
@init
@
text
@d20 1
a20 1
 * $Id: Activity.php,v 1.3 2004/08/18 22:27:27 at Exp $
d29 1
a29 1
    var $c_description = null;
d42 12
a54 1
     *
a60 1
     *
a63 14
    } //}}}

    /* {{{getDescription
     *
     */
    function getDescription() {
        return $this->c_description;
    } //}}}

    /* {{{setDescription
     *
     */
    function setDescription($value) {
        $this->c_description = $value;
@

